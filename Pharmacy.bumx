machine Pharmacy 
refines User 
sees PharmacyContext

variables
	password
	registered
	current_user
	role
	
	pharmacies
	medicine
	medicine_count
	client_name
	nric
	prescriptions
	medicine_info
	last_medicine_date
	pharmacy_stock
	appointment_num
	
	
invariants
	@inv1: pharmacies ∈ USER ↔ PHARMACIES
	@inv2: medicine ∈ BATCH_NUM ⇸ MEDICINE_NAME
	@inv3: medicine_count ∈ BATCH_NUM ↔ ℕ
	@inv4: client_name ∈ NRIC ⇸ USER_NAME
	@inv5: nric ∈ USER ↔ NRIC
	@inv6: prescriptions ∈ NRIC ↔ PRESCRIPTIONS
	@inv7: medicine_info ∈ PRESCRIPTIONS ↔ BATCH_NUM
	@inv8: last_medicine_date ∈ PRESCRIPTIONS ↔ DATE
	@inv9: pharmacy_stock ∈ PHARMACIES ↔ BATCH_NUM
	@inv10: appointment_num ∈ PHARMACIES ⇸ ℕ1


event INITIALISATION extends INITIALISATION
then
	@act1: pharmacies ≔ ∅
	@act2: medicine ≔ ∅
	@act3: medicine_count ≔ ∅ 
	@act4: client_name ≔ ∅
	@act5: nric ≔ ∅
	@act6: prescriptions ≔ ∅
	@act7: medicine_info ≔ ∅
	@act8: last_medicine_date ≔ ∅ 
	@act9: pharmacy_stock ≔ ∅
	@act10: appointment_num ≔ ∅
end


event AddPharmacy
any 
	pharmacy
	admin
	apt_num
where
	@grd1: pharmacy ∈ PHARMACIES ∧ pharmacy ∉ ran(pharmacies)
	@grd2: role(admin) = Admin
	@grd3: apt_num ∈ ℕ1
then 
	@act1: pharmacies ≔ pharmacies ∪ {admin ↦ pharmacy}
	@grd2: appointment_num ≔ appointment_num ∪ {pharmacy ↦ apt_num}
end


event AddMedicine
any 
	admin
	pharmacy
	medicine_name
	batch
	count
where 
	@grd1: role(admin) = Admin
	@grd2: pharmacy ∈ pharmacies(admin)
	@grd3: batch ∈ BATCH_NUM ∧ batch ∉ dom(medicine)
	@grd4: medicine_name ∈ MEDICINE_NAME
	@grd5: count ∈ ℕ1
then
	@act1: pharmacy_stock ≔ pharmacy_stock ∪ {pharmacy ↦ batch}
	@act2: medicine ≔ medicine ∪ {batch ↦ medicine_name}
	@act3: medicine_count ≔ {batch ↦ count}
end

event getPrescription
any
	 client
	 result
where
	@grd1: role(client) = Client
	@grd2: result =  ran({nric(client)} ◁ prescriptions)
end

event AddPrescription
any 
	client
	prescription
where
	@grd1: client ∈ Clients
	@grd2: prescription ∈ PRESCRIPTIONS ∧ prescription ∉ ran(prescriptions)
then 
	@act1: prescriptions ≔ prescriptions ∪ {nric(client) ↦ prescription}
end

event updateAptNum
any 
	admin
	pharmacy
	apt_num
where
	@grd1: role(admin) = Admin
	@grd2: pharmacy ∈ pharmacies(admin)
	@grd3: apt_num ∈ ℕ1
then
	@act1: appointment_num(pharmacy) ≔ apt_num 
end 

event getClientName
any 
	user
	ic
	result
where 
	@grd1: role(user) = Admin ∨ role(user) = Staff
	@grd2: ic ∈ ran(nric)
	@grd3: result = client_name(ic)
end	


event Login extends Login
end
event Logout extends Logout
end

event RegisterAsClient extends  RegisterAsClient 
any 
	ic
where 
	@grd1: ic ∈ NRIC ∧ ic ∉ ran(nric)
then 
	@act1: nric ≔ nric ∪ {new_user ↦ ic}
end

event RegisterAsAdmin extends RegisterAsAdmin
end
